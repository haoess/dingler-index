<h1>Zeitliste 19. Jahrhundert</h1>

<table>
  <tr>
    <td><div id="my-timeline" style="width:800px;height:600px;border:1px solid #aaa;font-size:.8em"></div></td>
    <td style="white-space:nowrap; padding-left:15px">
      <img src="static/images/circle-grey.png" /> Dingler Events<br />
      <img src="static/images/circle-blue.png" /> Wissenschaft, Technologie<br />
      <img src="static/images/circle-lightblue.png" /> Weltausstellungen<br />
      <img src="static/images/circle-black.png" /> Firmengründungen<br />
      <img src="static/images/circle-pink.png" /> Politik, Religion<br />
      <img src="static/images/circle-green.png" /> Architektur, Städtebau<br />
      <img src="static/images/circle-red.png" /> Literatur, Philosophie, Kunst, Musik<br />
      <img src="static/images/circle-orange.png" /> Patentrecht<br />
      <img src="static/images/circle-yellow.png" /> Anderes
    </td>
  </tr>
</table>

<script type="text/javascript">
  jQuery( document ).ready( onLoad() );
</script>

[% BLOCK head %]
  <script src="http://static.simile.mit.edu/timeline/api-2.3.0/timeline-api.js?bundle=true" type="text/javascript"></script>
  <script type="text/javascript">

    Timeline.DefaultEventSource.Event.prototype.fillTime = function(elmt, labeller) {
      var sDate = this._start;
      var eDate = this._end;
      var sDated = new Date(sDate);
      var eDated = new Date(eDate);
      Date.MONTH_NAMES = [ "Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" ];
      Date.prototype.getMonthName = function() { return Date.MONTH_NAMES[this.getMonth()] };
      var startString = sDated.getDate() + ". " + sDated.getMonthName() + " " + sDated.getFullYear();
      var endString = eDated.getDate() + ". " + sDated.getMonthName() + " " + eDated.getFullYear();
      if (this._instant) {
        if (this.isImprecise()) {
          elmt.appendChild(elmt.ownerDocument.createTextNode(startString+ " - " + endString));
        }
        else {
          elmt.appendChild(elmt.ownerDocument.createTextNode(startString));
        }
      }
      else {
        if (this.isImprecise()) {
          elmt.appendChild(elmt.ownerDocument.createTextNode(labeller.labelPrecise(this._start) + " ~ " + labeller.labelPrecise(this._latestStart)));
          elmt.appendChild(elmt.ownerDocument.createElement("br"));
          elmt.appendChild(elmt.ownerDocument.createTextNode(labeller.labelPrecise(this._earliestEnd) + " ~ " + labeller.labelPrecise(this._end)));
        }
        else {
          elmt.appendChild(elmt.ownerDocument.createTextNode(startString+ " - " + endString));
          elmt.appendChild(elmt.ownerDocument.createElement("br"));
        }
      }
    };

    var tl;
    function onLoad() {
      var eventSource = new Timeline.DefaultEventSource();
      var bandInfos = [
        Timeline.createBandInfo({
          eventSource:    eventSource,
          date:           "Jan 01 [% year || 1820 %] 00:00:00 GMT",
          width:          "80%",
          intervalUnit:   Timeline.DateTime.YEAR,
          intervalPixels: 100
        }),
        Timeline.createBandInfo({
          overview:       true,
          eventSource:    eventSource,
          date:           "Jan 01 [% year || 1820 %] 00:00:00 GMT",
          width:          "20%",
          intervalUnit:   Timeline.DateTime.DECADE,
          intervalPixels: 400
        })
      ];
      bandInfos[1].syncWith = 0;
      bandInfos[1].highlight = true;
      tl = Timeline.create(document.getElementById("my-timeline"), bandInfos);
      Timeline.loadXML("[% base %]static/dingler.xml", function(xml, url) { eventSource.loadXML(xml, url); });
    }
    var resizeTimerID = null;
    function onResize() {
      if (resizeTimerID == null) {
        resizeTimerID = window.setTimeout(function() {
          resizeTimerID = null;
          tl.layout();
        }, 500);
      }
    }
  </script>
[% END %]
